<!--
  -    Copyright (c) 2018-2025, ystart All rights reserved.
  -
  - Redistribution and use in source and binary forms, with or without
  - modification, are permitted provided that the following conditions are met:
  -
  - Redistributions of source code must retain the above copyright notice,
  - this list of conditions and the following disclaimer.
  - Redistributions in binary form must reproduce the above copyright
  - notice, this list of conditions and the following disclaimer in the
  - documentation and/or other materials provided with the distribution.
  - Neither the name of the pig4cloud.com developer nor the names of its
  - contributors may be used to endorse or promote products derived from
  - this software without specific prior written permission.
  - Author: ystart
  -->
<template>
    <div class="execution">
        <basic-container>
            <avue-crud
                v-bind="bindVal"
                v-on="onEvent"
                v-model="form"
                :page.sync="page"
            >
                <template slot="menuLeft">
                    <el-button
                        type="primary"
                        icon="el-icon-plus"
                        size="small"
                        @click.stop="addRow()">
                        新 增
                    </el-button>
                </template>
                <template slot-scope="{ row, index }" slot="menu">
                    <el-button
                        type="text"
                        icon="el-icon-edit"
                        size="small"
                        text
                        @click.stop="editRow(row, index)">
                        编辑
                    </el-button>
                    <el-button
                        type="text"
                        icon="el-icon-view"
                        size="small"
                        text
                        @click.stop="viewRow(row, index)">
                        查看
                    </el-button>
                </template>
            </avue-crud>
            <add-form ref="addRef" v-if="addVisible" @saveSucess="getList"></add-form>
            <edit-form
                    ref="editRef"
                    @saveSucess="getList"
                    v-if="editVisible"
            ></edit-form>
            <view-form ref="viewRef" v-if="viewVisible"></view-form>
        </basic-container>
    </div>
</template>

<script>
    import {page, list, getObj, addObj, putObj, delObj} from '@/api/${pathName}'
    import {tableOption, addOption, editOption, viewOption} from '@/const/crud/${pathName}'
    import {mapGetters} from 'vuex'
    import addForm from './add-form.vue'
    import editForm from './edit-form.vue'
    import viewForm from './view-form.vue'

    export default {
        name: '${pathName}',
        components: {
            addForm,
            editForm,
            viewForm
        },
        data() {
            return {
                loadDataEnd: false,
                viewConfig: [],
                activeTab: '0',
                addVisible: false,
                editVisible: false,
                viewVisible: false,
                data: [],
                filterParams: {},
                form: {},
                params: {},
                page: {
                    total: 0, // 总页数
                    currentPage: 1, // 当前页数
                    pageSize: 20 // 每页显示多少条
                },
                model: '',
                loading: true,
                option: tableOption,
                addOption: addOption,
                editOption: editOption,
                viewOption: viewOption
            }
        },
        computed: {
            ...mapGetters(['permissions']),
            permissionList() {
                return {
                    addBtn: this.vaildData(this.permissions.${moduleName}_${pathName}_add, false),
                    delBtn: this.vaildData(this.permissions.${moduleName}_${pathName}_del, false),
                    editBtn: this.vaildData(this.permissions.${moduleName}_${pathName}_edit, false)
                };
            },
            bindVal () {
                return {
                    ref: 'crud',
                    option: this.option,
                    data: this.data,
                    tableLoading: this.loading
                }
            },
            onEvent () {
                return {
                    'on-load': this.getList,
                    'row-del': this.rowDel,
                    'refresh-change': this.refreshChange,
                    'search-reset': this.searchChange,
                    'search-change': this.searchChange,
                    'filter': this.filterChange,
                    'sort-change': this.sortChange
                }
            }
        },
        methods: {
            getList() {
                this.tableLoading = true
                const pageParams = {
                    current: page.currentPage,
                    size: page.pageSize
                }
                let data = Object.assign(pageParams, this.params)
                if(this.filterParams) {
                    data = Object.assign(data, this.filterParams)
                }
                page(data).then(res => {
                    this.loading = false;
                    let result = res.data.data
                    this.page.total = result['total'];
                    this.data = result['records'];
                }).catch(() => {
                    this.loading=false
                })
            },
            addRow () {
                this.addVisible = true
                this.$nextTick(() => {
                    this.$refs.addRef.init(this.addOption)
                })
            },
            viewRow (row, ind) {
                this.viewVisible = true
                this.$nextTick(() => {
                    this.$refs.viewRef.init(this.viewOption, row, ind)
                })
            },
            editRow (row, ind) {
                this.editVisible = true
                this.$nextTick(() => {
                    this.$refs.editRef.init(this.editOption, row, ind)
                })
            },
            rowDel: function (row, index) {
                this.$confirm('是否确认删除ID为' + row.$pk.lowerAttrName, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(function () {
                    return delObj(row.$pk.lowerAttrName)
                }).then(data => {
                    this.$message.success('删除成功')
                    this.getList()
                })
            },
            filterChange (result) {
                console.log('filterChange', result)
                this.filterParams = {}
                for (let index = 0; index < result.length; index++) {
                    const item = result[index];
                    this.filterParams['$' + item[1] + ':' + item[0]] = item[2]
                }
                this.getList();
            },
            sortChange(val){
                this.page.currentPage = 1;
                this.page['sortField'] = val['prop']
                this.page['sortOrder'] = val['order']
                this.getList()
            },
            sizeChange(pageSize){
                this.page.pageSize = pageSize
            },
            currentChange(current){
                this.page.currentPage = current
            },
            searchChange(form, done) {
                this.searchForm = form
                this.page.currentPage = 1
                this.getList()
                done()
            },
            refreshChange() {
                this.getList()
            }
        }
    }
</script>
<style lang="scss" scoped>
</style>
